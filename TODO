- Add apply-patches to SEE ALSOs

- Add workflow command to capture
    applying patches -b foo
    refreshing-patches -b foo
    diff, commit w/ template and push
    cleanup ephemeral branches

- Missing blob issue:

    Observation: the missing blob issue is a consequence of how git implements
    3way merge. If we want to retain the convenience of it, we just have
    accept that some merge conflicts will be non-deterministic.

    However, packagers should not have to accept that: they shouldn't care
    about merges at all.

    The solution is to *export* a single, plain diff file against a project,
    which will be guaranteed to apply cleanly.

    The name of the diff would have the commit-hashed that it was based on, so
    people receiving the patch know which *upstream* commit it will apply
    cleanly to. For example:

    842.<hash>.diff

- Make flow chart documentation for each workflow
    - Packaging
    - Refreshing all patches
        * 3way merge conflict
        * 2way merge conflict
    - Adding a new patch
    - Removing a patch

DOCS
- Add man git-zply for workflow documentation (use <file>.5)

CLEANUP
- Remove python dependencies (just bash)
- Better handle trailing-whitespace fixup (sed?)

TESTING
- Add test-harness for diff
- Add test-harness for fixup

SCREENCAST
- Show basic workflow


Workflow helpers


git apply-patches -b <branch> <patch-repo-dir>
    # Create working-repo branch
    git am --3way ../patch-repo/*.patch

git refresh-patches -b <branch> <patch-repo-dir> since



- Prep
    # Create branch in working repo
    # TOPIC=do-something, UPSTREAM_REMOTE=ohthree, UPSTREAM_BRANCH=upstream
    git fetch $UPSTREAM_REMOTE
    # Create local branch if it doesn't exist with -b
    git checkout $UPSTREAM_BRANCH
    git merge $UPSTREAM_REMOTE/$UPSTREAM_BRANCH
    git checkout -b $TOPIC

    # Create topic branch in patch repo
    # TOPIC=do-something, PATCH_REPO_REMOTE=origin, PATCH_REPO_BRANCH=upstream
        cd ../patch-repo
        git fetch $PATCH_REPO_REMOTE
        git checkout $PATCH_REPO_BRANCH
        git merge $PATCH_REPO_REMOTE/$PATCH_REPO_BRANCH
        git checkout -b $TOPIC


- Apply and Refresh
    cd ../working-repo
    git am --3way ../patch-repo/*.patch

- Finalize
    git refresh-patches ../patch-repo upstream
    cd ../patch-repo
    git commit -a -m "Message"
    git push $PATCH_REPO_REMOTE $TOPIC

    # Delete patch-repo branch
    # Delete working-repo branch
