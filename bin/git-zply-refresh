#!/bin/bash
#
# NAME
#
#   git-save-patch - save patch series to patch repo
#
# SYNOPSIS
#
#   git-save-patch <patch-repo-path> <since>
#
# DESCRIPTION
#
#   Creates a series of patches and saves them into the patch repo.
#
# OUTPUT
#
#   Prints current step to stdout
#
# EXIT STATUS
#
#   0 - success
#   1 - failure
VERSION=0.1

function version() {
    echo $VERSION
    exit 0
}

function die() {
    >&2 echo $@
    exit 1
}

function check_patch_repo() {
    if [[ ! -e $1 ]]; then
        die "error: Patch repo directory not found"
    elif [[ ! -e $1/.git ]]; then
        die "error: Patch repo is not a git repo (did you git init it?)"
    fi
}

function usage() {
    die "usage: git zply-refresh [-h] [-v] <patch-repo-path> <since>"
}

while getopts 'hv' opt; do
    case $opt in
        h) usage;;
        v) version;;
        *) usage;;
    esac
done

shift $(($OPTIND - 1))

if [[ -z $1 ]] || [[ -z $2 ]]; then
    usage
fi

PATCH_REPO_PATH=$1
check_patch_repo $PATCH_REPO_PATH
SINCE=$2
FORMAT_PATH=$PWD/.patches
BASED_ON_HASH=`git show --pretty="%H" $SINCE`
git zply-format -o $FORMAT_PATH $SINCE
git zply-sync $FORMAT_PATH $PATCH_REPO_PATH
git zply-commit -b $BASED_ON_HASH $PATCH_REPO_PATH
rm -rf $FORMAT_PATH
