#!/bin/bash
CMD='git refresh-patches'
USAGE="usage: $CMD [-b <branch>] [-c] [-h] [-p <remote>/<branch>] [-v] <patch-repo-dir> <since>"
VERSION=0.1

function die() {
    >&2 echo "[$CMD error]: $@"
    exit 2
}

function die_usage() {
    >&2 echo $USAGE
    exit 2
}

function help() {
    echo $USAGE
    exit 0
}

function version() {
    echo $VERSION
    exit 0
}

while getopts 'b:chp:v' opt; do
    case $opt in
        b) BRANCH=$OPTARG;;
        c) COLORIZE=1;;
        h) help;;
        p) PULL_REMOTE=$OPTARG;;
        v) version;;
        *) die_usage;;
    esac
done
shift $(($OPTIND - 1))

if [[ -z $1 ]] || [[ -z $2 ]]; then
    die_usage
fi

PATCH_REPO_DIR=$1
SINCE=$2
PATCHES_DIR=$PWD/.patches

if [[ $COLORIZE -eq 1 ]] || [[ $ZPLY_COLOR -eq 1 ]]; then
    COLOR_OPT=-c
fi

if [[ -n $BRANCH ]]; then
    BRANCH_OPT="-b $BRANCH"
fi

if [[ -n $PULL_REMOTE ]]; then
    PULL_REMOTE_OPT="-p $PULL_REMOTE"
fi

git zply-format $PATCHES_DIR $SINCE || die "git zply-format failed"
git zply-sync $BRANCH_OPT $COLOR_OPT $PULL_REMOTE_OPT $PATCHES_DIR $PATCH_REPO_DIR
SYNC_RET=$?
if [[ $SYNC_RET -gt 1 ]]; then
    die "git zply-sync failed"
fi
rm -rf $PATCHES_DIR
exit $SYNC_RET
