#!/bin/bash
# Commit all patches to patch repo
function die() {
    >&2 echo $@
    exit 1
}

function realpath {
    echo $(cd $(dirname $1); pwd)/$(basename $1);
}

function usage() {
    die "usage: git zply-commit [-h] [-b based-on] <patch-repo-patch>"
}

function check_patch_repo() {
    if [[ ! -e $1 ]]; then
        die "error: Patch repo directory not found"
    elif [[ ! -e $1/.git ]]; then
        die "error: Patch repo is not a git repo (did you git init it?)"
    fi
}

while getopts 'b:h' opt; do
    case $opt in
        b) BASED_ON=$OPTARG;;
        h) usage;;
        *) usage;;
    esac
done

shift $(($OPTIND - 1))

if [[ -z $1 ]]; then
    usage
fi

PATCH_REPO_PATH=`realpath $1`
check_patch_repo $PATCH_REPO_PATH

pushd $PATCH_REPO_PATH > /dev/null
git add *.patch
cat > .tmp-commit-msg <<-EOF
Saving patches...
EOF

# Add based-on annotation
if [[ -n $BASED_ON ]]; then
    echo >> .tmp-commit-msg
    echo "Based-On: $BASED_ON" >> .tmp-commit-msg
fi

# -t would abort the commit if the message was not edited; we don't want to
# require that in all cases, so using -eF instead
git commit -qeF .tmp-commit-msg
rm .tmp-commit-msg
popd > /dev/null
echo "Commited patches"
