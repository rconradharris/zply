#!/bin/bash
CMD='git apply-patches'
USAGE="usage: $CMD [-b <branch>] [-h] [-v] [patch-repo-dir]"
VERSION=0.1

function die() {
    >&2 echo "[$CMD error]: $@"
    exit 2
}

function die_usage() {
    >&2 echo $USAGE
    exit 2
}

git_checkout_existing() {
    git checkout -q $1 2>/dev/null || die "git checkout $1 failed"
}

git_checkout_new() {
    git checkout -q -b $1 || die "git checkout -b $1 failed"
}

git_pull() {
    git pull -q $1 $2 || die "git pull $1 $2 failed"
}

function help() {
    echo $USAGE
    exit 0
}

function read_config() {
    if [[ -e .git/zply ]]; then
        sed 's/^/export /' < .git/zply > .git/zply.tmp
        source .git/zply.tmp
        rm .git/zply.tmp
    fi
}

function version() {
    echo $VERSION
    exit 0
}

# MAIN
read_config

while getopts 'b:hv' opt; do
    case $opt in
        b) BRANCH=$OPTARG;;
        h) help;;
        v) version;;
        *) die_usage;;
    esac
done
shift $(($OPTIND - 1))

if [[ -n $1 ]]; then
    ZPLY_PATCH_REPO_DIR=$1
fi

if [[ -z $ZPLY_PATCH_REPO_DIR ]]; then
    die_usage
fi

if [[ -n $ZPLY_UPSTREAM_REMOTE ]]; then
    if [[ -n $ZPLY_UPSTREAM_BRANCH ]]; then
        git_checkout_existing $ZPLY_UPSTREAM_BRANCH
        git_pull $ZPLY_UPSTREAM_REMOTE $ZPLY_UPSTREAM_BRANCH
    else
        die "Must set ZPLY_UPSTREAM_BRANCH if using ZPLY_UPSTREAM_REMOTE"
    fi
else
    if [[ -n $ZPLY_UPSTREAM_BRANCH ]]; then
        die "Must set ZPLY_UPSTREAM_REMOTE if using ZPLY_UPSTREAM_BRANCH"
    fi
fi

if [[ -n $BRANCH ]]; then
    git_checkout_new $BRANCH
fi

git am --3way $ZPLY_PATCH_REPO_DIR/*.patch
