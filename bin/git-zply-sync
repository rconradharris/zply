#!/bin/bash
CMD='git zply-sync'
USAGE="usage: $CMD [-h] [-v] <patches-dir> <patch-repo-dir>"
VERSION=0.1

GREEN='\033[0;32m'
RED='\033[0;31m'
YELLOW='\033[1;33m'
NC='\033[0m'

function colorize() {
    COLOR=$1
    shift
    echo -e ${COLOR}${@}${NC}
}

function die() {
    >&2 echo "[$CMD error]: $@"
    exit 2
}

function die_usage() {
    >&2 echo $USAGE
    exit 2
}

function realpath {
    echo $(cd $(dirname $1); pwd)/$(basename $1);
}

function help() {
    echo $USAGE
    exit 0
}

function version() {
    echo $VERSION
    exit 0
}

while getopts 'hv' opt; do
    case $opt in
        h) help;;
        v) version;;
        *) die_usage;;
    esac
done
shift $(($OPTIND - 1))

if [[ -z $1 ]] || [[ -z $2 ]]; then
    die_usage
fi

PATCHES_DIR=`realpath $1`
PATCH_REPO_DIR=`realpath $2`

if [[ ! -e $PATCH_REPO_DIR ]]; then
    die "Patch repo directory not found"
elif [[ ! -e $PATCH_REPO_DIR/.git ]]; then
    die "Patch repo is not a git repo (did you git init it?)"
fi

ADDED=0
UPDATED=0
REMOVED=0
RET=0


# Copy patches into patch repo
for patch in `ls $PATCHES_DIR/*.patch`; do
    # Only copy patches that meaningfully changed
    patch_basename=`basename $patch`
    repo_patch=$PATCH_REPO_DIR/$patch_basename
    if [[ -e $repo_patch ]]; then
        git zply-diff $patch $repo_patch > /dev/null
        if [[ $? -eq 1 ]]; then
            colorize $YELLOW "~ $patch_basename"
            cp $patch $PATCH_REPO_DIR || die "cp failed: $patch_basename"
            RET=1
            let UPDATED++
        elif [[ $? -gt 1 ]]; then
            die "git zply-diff failed"
        fi
    else
        colorize $GREEN "+ $patch_basename"
        cp $patch $PATCH_REPO_DIR || die "cp failed: $patch_basename"
        RET=1
        let ADDED++
    fi
done

# git add new/updated patches; git rm unused patches
pushd $PATCH_REPO_DIR > /dev/null

for patch in `ls *.patch`; do
    patch_basename=`basename $patch`
    if [[ -e $PATCHES_DIR/$patch_basename ]]; then
        git add $patch_basename || die "git add failed for $patch_basename"
    else
        colorize $RED "- $patch_basename"
        git rm $patch_basename > /dev/null || die "git rm failed for $patch_basename"
        RET=1
        let REMOVED++
    fi
done

copy_based_on=1
if [[ -e .based-on ]]; then
    diff $PATCHES_DIR/.based-on .based-on > /dev/null
    DIFF_RET=$?
    if [[ $DIFF_RET -eq 1 ]]; then
        colorize $YELLOW "~ .based-on"
        echo -e "${YELLOW}${MSG}${NC}"
        cp $PATCHES_DIR/.based-on $PATCH_REPO_DIR
        git add .based-on || die "git add failed for .based-on"
        RET=1
        let UPDATED++
    fi
else
    colorize $GREEN "+ .based-on"
    cp $PATCHES_DIR/.based-on $PATCH_REPO_DIR
    git add .based-on || die "git add failed for .based-on"
    RET=1
    let ADDED++
fi

popd > /dev/null

if [[ $RET -eq 0 ]]; then
    echo "No changes to patch repo"
else
    echo "$ADDED added $UPDATED updated $REMOVED removed"
fi

exit $RET
