#!/bin/bash
function die() {
    >&2 echo $@
    exit 1
}

function realpath {
    echo $(cd $(dirname $1); pwd)/$(basename $1);
}

function check_patch_repo() {
    if [[ ! -e $1 ]]; then
        die "error: Patch repo directory not found"
    elif [[ ! -e $1/.git ]]; then
        die "error: Patch repo is not a git repo (did you git init it?)"
    fi
}

if [[ -z $1 ]] || [[ -z $2 ]]; then
    die "usage: git zply-sync <format-path> <patch-repo-path>"
fi

FORMAT_PATH=`realpath $1`
PATCH_REPO_PATH=`realpath $2`
check_patch_repo $PATCH_REPO_PATH

for patch in `ls $FORMAT_PATH/*.patch`; do
    # Only copy patches that meaningfully changed
    copy_patch=1
    patch_basename=`basename $patch`
    repo_patch=$PATCH_REPO_PATH/$patch_basename
    if [[ -e $repo_patch ]]; then
        git zply-diff $patch $repo_patch > /dev/null
        if [[ $? -eq 0 ]]; then
            copy_patch=0
        elif [[ $? -ne 1 ]]; then
            die "git zply-diff failed"
        fi
    fi

    if [[ $copy_patch -eq 1 ]]; then
        echo "Copying $patch_basename"
        cp $patch $PATCH_REPO_PATH
    fi
done

pushd $PATCH_REPO_PATH > /dev/null

for patch in `ls *.patch`; do
    patch_basename=`basename $patch`
    if [[ ! -e $FORMAT_PATH/$patch_basename ]]; then
        echo "Removing unused patch $patch_basename"
        git rm $patch_basename 2>&1 > /dev/null || die "git rm failed"
    fi
done

popd > /dev/null
